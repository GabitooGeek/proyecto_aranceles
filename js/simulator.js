document.addEventListener('DOMContentLoaded', () => { const elements = { form: document.getElementById('tariff-form'), tariffType: document.getElementById('tariff-type'), cifValue: document.getElementById('cif-value'), physicalUnits: document.getElementById('physical-units'), adValoremRate: document.getElementById('ad-valorem-rate'), specificRate: document.getElementById('specific-rate'), ftaReduction: document.getElementById('fta-reduction'), resultBase: document.getElementById('result-base'), resultDiscount: document.getElementById('result-discount'), resultTotal: document.getElementById('result-total') }; if (!elements.form) return; const formatCurrency = (value) => new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(value); const calculateTariff = () => { let baseCalculated = 0; const tariffType = elements.tariffType.value, cif = parseFloat(elements.cifValue.value) || 0, units = parseFloat(elements.physicalUnits.value) || 0, adValorem = parseFloat(elements.adValoremRate.value) || 0, specific = parseFloat(elements.specificRate.value) || 0, fta = parseFloat(elements.ftaReduction.value) || 0; switch (tariffType) { case 'ad-valorem': baseCalculated = cif * (adValorem / 100); break; case 'specific': baseCalculated = units * specific; break; case 'mixed': baseCalculated = (cif * (adValorem / 100)) + (units * specific); break; } const discount = baseCalculated * (fta / 100); const total = baseCalculated - discount; elements.resultBase.textContent = formatCurrency(baseCalculated); elements.resultDiscount.textContent = formatCurrency(discount); elements.resultTotal.textContent = formatCurrency(total); }; const updateFormState = () => { const tariffType = elements.tariffType.value; elements.cifValue.disabled = (tariffType === 'specific'); elements.adValoremRate.disabled = (tariffType === 'specific'); elements.physicalUnits.disabled = (tariffType === 'ad-valorem'); elements.specificRate.disabled = (tariffType === 'ad-valorem'); }; elements.form.addEventListener('input', calculateTariff); elements.tariffType.addEventListener('change', () => { updateFormState(); calculateTariff(); }); updateFormState(); calculateTariff(); });
